events {
    worker_connections 1024;
}

http {
    # Rate limiting zone definition
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=90r/m;

    upstream api_servers {
        server 127.0.0.1:5000;
    }

    server {
        listen 80;
        listen [::]:80;
        server_name localhost;

        # Redirect all HTTP requests to HTTPS
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name localhost;

        # SSL configuration
        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Enable HSTS
        add_header Strict-Transport-Security "max-age=31536000" always;

        location / {
            # Apply rate limiting
            limit_req zone=api_limit burst=10 nodelay;

            proxy_pass http://api_servers;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            
            # Security headers
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
            add_header X-Content-Type-Options "nosniff";
        }
    }
}