version: '3.8'

services:
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - api
  #   networks:
  #     - app-network

  # api:
  #   build: .
  #   expose:
  #     - "5000"
  #   environment:
  #     - HOST=0.0.0.0
  #     - PORT=5000
  #     - PGUSER=developer
  #     - PGHOST=db
  #     - PGPORT=5432
  #     - PGPASSWORD=supersecretpassword
  #     - PGDATABASE=openmusicapi
  #     - SMTP_HOST=mailhog
  #     - SMTP_PORT=1025
  #   depends_on:
  #     - db
  #     - mailhog
  #   networks:
  #     - app-network

  # db:
  #   image: postgres:15-alpine
  #   environment:
  #     - POSTGRES_USER=developer
  #     - POSTGRES_PASSWORD=supersecretpassword
  #     - POSTGRES_DB=openmusicapi
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - app-network

  redis:
     image: redis:7-alpine
     ports:
       - "6379:6379"
     volumes:
       - redis_data:/data
     command: redis-server --appendonly yes
     networks:
       - app-network

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"   # AMQP protocol port
      - "15672:15672" # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025" # SMTP Server
      - "8025:8025" # Web UI
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  app-network:
    driver: bridge